[{"E:\\itInCubator\\to_do_list_06_main\\src\\index.tsx":"1","E:\\itInCubator\\to_do_list_06_main\\src\\reportWebVitals.ts":"2","E:\\itInCubator\\to_do_list_06_main\\src\\app\\store.ts":"3","E:\\itInCubator\\to_do_list_06_main\\src\\app\\App.tsx":"4","E:\\itInCubator\\to_do_list_06_main\\src\\features\\TodolistsList\\tasks-reducer.ts":"5","E:\\itInCubator\\to_do_list_06_main\\src\\features\\TodolistsList\\todolists-reducer.ts":"6","E:\\itInCubator\\to_do_list_06_main\\src\\features\\TodolistsList\\TodolistsList.tsx":"7","E:\\itInCubator\\to_do_list_06_main\\src\\api\\todolists-api.ts":"8","E:\\itInCubator\\to_do_list_06_main\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx":"9","E:\\itInCubator\\to_do_list_06_main\\src\\components\\AddItemForm\\AddItemForm.tsx":"10","E:\\itInCubator\\to_do_list_06_main\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx":"11","E:\\itInCubator\\to_do_list_06_main\\src\\components\\EditableSpan\\EditableSpan.tsx":"12","E:\\itInCubator\\to_do_list_06_main\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx":"13","E:\\itInCubator\\to_do_list_06_main\\src\\app\\appReducer.ts":"14","E:\\itInCubator\\to_do_list_06_main\\src\\utils\\errorUtils.ts":"15","E:\\itInCubator\\to_do_list_06_main\\src\\features\\Login\\Login.tsx":"16"},{"size":643,"mtime":1614104838953,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":1607869388000,"results":"19","hashOfConfig":"18"},{"size":1097,"mtime":1614181170532,"results":"20","hashOfConfig":"18"},{"size":1734,"mtime":1615224236705,"results":"21","hashOfConfig":"18"},{"size":5983,"mtime":1614272221406,"results":"22","hashOfConfig":"18"},{"size":5216,"mtime":1614272497164,"results":"23","hashOfConfig":"18"},{"size":3800,"mtime":1614255339293,"results":"24","hashOfConfig":"18"},{"size":2582,"mtime":1614104703703,"results":"25","hashOfConfig":"18"},{"size":4213,"mtime":1614255717941,"results":"26","hashOfConfig":"18"},{"size":1595,"mtime":1614255655311,"results":"27","hashOfConfig":"18"},{"size":1774,"mtime":1614103979140,"results":"28","hashOfConfig":"18"},{"size":952,"mtime":1594154724000,"results":"29","hashOfConfig":"18"},{"size":1039,"mtime":1614257130455,"results":"30","hashOfConfig":"18"},{"size":1139,"mtime":1614269886458,"results":"31","hashOfConfig":"18"},{"size":786,"mtime":1614270959667,"results":"32","hashOfConfig":"18"},{"size":1431,"mtime":1615223178052,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"l3p77m",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"53"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"53"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"53"},"E:\\itInCubator\\to_do_list_06_main\\src\\index.tsx",[],"E:\\itInCubator\\to_do_list_06_main\\src\\reportWebVitals.ts",[],"E:\\itInCubator\\to_do_list_06_main\\src\\app\\store.ts",[],"E:\\itInCubator\\to_do_list_06_main\\src\\app\\App.tsx",[],"E:\\itInCubator\\to_do_list_06_main\\src\\features\\TodolistsList\\tasks-reducer.ts",[],"E:\\itInCubator\\to_do_list_06_main\\src\\features\\TodolistsList\\todolists-reducer.ts",[],"E:\\itInCubator\\to_do_list_06_main\\src\\features\\TodolistsList\\TodolistsList.tsx",["71","72","73","74","75","76","77","78"],"E:\\itInCubator\\to_do_list_06_main\\src\\api\\todolists-api.ts",[],"E:\\itInCubator\\to_do_list_06_main\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx",["79","80","81","82","83","84"],"import React, {useCallback, useEffect} from 'react'\r\nimport {AddItemForm} from '../../../components/AddItemForm/AddItemForm'\r\nimport {EditableSpan} from '../../../components/EditableSpan/EditableSpan'\r\nimport {Button, IconButton} from '@material-ui/core'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {Task} from './Task/Task'\r\nimport {TaskStatuses, TaskType} from '../../../api/todolists-api'\r\nimport {FilterValuesType, TodolistDomainType} from '../todolists-reducer'\r\nimport {useDispatch} from 'react-redux'\r\nimport {fetchTasksTC} from '../tasks-reducer'\r\n\r\ntype PropsType = {\r\n    todolist: TodolistDomainType\r\n    tasks: Array<TaskType>\r\n    changeFilter: (value: FilterValuesType, todolistId: string) => void\r\n    addTask: (title: string, todolistId: string) => void\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n    removeTodolist: (id: string) => void\r\n    changeTodolistTitle: (id: string, newTitle: string) => void\r\n    demo?: boolean\r\n\r\n}\r\n\r\nexport const Todolist = React.memo(function ({demo = false, ...props}: PropsType) {\r\n    console.log('Todolist called')\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        if(demo) {\r\n            return\r\n        }\r\n        const thunk = fetchTasksTC(props.todolist.id)\r\n        dispatch(thunk)\r\n\r\n    }, [props.todolist.id])\r\n\r\n    const addTask = useCallback((title: string) => {\r\n        props.addTask(title, props.todolist.id)\r\n    }, [props.addTask, props.todolist.id])\r\n\r\n    const removeTodolist = () => {\r\n        props.removeTodolist(props.todolist.id)\r\n    }\r\n    const changeTodolistTitle = useCallback((title: string) => {\r\n        props.changeTodolistTitle(props.todolist.id, title)\r\n    }, [props.todolist.id, props.changeTodolistTitle])\r\n\r\n    const onAllClickHandler = useCallback(() => props.changeFilter('all', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n    const onActiveClickHandler = useCallback(() => props.changeFilter('active', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n    const onCompletedClickHandler = useCallback(() => props.changeFilter('completed', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n\r\n\r\n    let tasksForTodolist = props.tasks\r\n\r\n    if (props.todolist.filter === 'active') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.New)\r\n    }\r\n    if (props.todolist.filter === 'completed') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.Completed)\r\n    }\r\n\r\n    return <div>\r\n        <h3><EditableSpan value={props.todolist.title} onChange={changeTodolistTitle}/>\r\n            <IconButton onClick={removeTodolist} disabled={props.todolist.entityStatus === \"loading\"}>\r\n                <Delete/>\r\n            </IconButton>\r\n        </h3>\r\n        <AddItemForm addItem={addTask} disabled={props.todolist.entityStatus === \"loading\"}/>\r\n        <div>\r\n            {\r\n                tasksForTodolist.map(t => <Task key={t.id} task={t} todolistId={props.todolist.id}\r\n                                                removeTask={props.removeTask}\r\n                                                changeTaskTitle={props.changeTaskTitle}\r\n                                                changeTaskStatus={props.changeTaskStatus}\r\n                />)\r\n            }\r\n        </div>\r\n        <div style={{paddingTop: '10px'}}>\r\n            <Button variant={props.todolist.filter === 'all' ? 'outlined' : 'text'}\r\n                    onClick={onAllClickHandler}\r\n                    color={'default'}\r\n            >All\r\n            </Button>\r\n            <Button variant={props.todolist.filter === 'active' ? 'outlined' : 'text'}\r\n                    onClick={onActiveClickHandler}\r\n                    color={'primary'}>Active\r\n            </Button>\r\n            <Button variant={props.todolist.filter === 'completed' ? 'outlined' : 'text'}\r\n                    onClick={onCompletedClickHandler}\r\n                    color={'secondary'}>Completed\r\n            </Button>\r\n        </div>\r\n    </div>\r\n})\r\n\r\n\r\n",["85","86"],"E:\\itInCubator\\to_do_list_06_main\\src\\components\\AddItemForm\\AddItemForm.tsx",["87","88","89"],"import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\nimport {Box, Button, FormControl, IconButton, TextField} from '@material-ui/core';\r\nimport {AddBox} from '@material-ui/icons';\r\n\r\ntype AddItemFormPropsType = {\r\n    addItem: (title: string) => void\r\n    disabled?: boolean\r\n}\r\n\r\nexport const AddItemForm = React.memo(function({addItem, disabled = false}: AddItemFormPropsType) {\r\n    console.log(\"AddItemForm called\")\r\n\r\n    let [title, setTitle] = useState(\"\")\r\n    let [error, setError] = useState<string | null>(null)\r\n\r\n    const addItemHandler = () => {\r\n        if (title.trim() !== \"\") {\r\n            addItem(title);\r\n            setTitle(\"\");\r\n        } else {\r\n            setError(\"Title is required\");\r\n        }\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (error !== null) {\r\n            setError(null);\r\n        }\r\n        if (e.charCode === 13) {\r\n            addItemHandler();\r\n        }\r\n    }\r\n\r\n    return <div>\r\n        <TextField variant=\"outlined\"\r\n                   disabled={disabled}\r\n                   error={!!error}\r\n                   value={title}\r\n                   onChange={onChangeHandler}\r\n                   onKeyPress={onKeyPressHandler}\r\n                   label=\"Title\"\r\n                   helperText={error}\r\n        />\r\n        <IconButton color=\"primary\" onClick={addItemHandler} disabled={disabled}>\r\n            <AddBox />\r\n        </IconButton>\r\n    </div>\r\n})\r\n","E:\\itInCubator\\to_do_list_06_main\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx",["90","91","92"],"import React, {ChangeEvent, useCallback} from 'react'\r\nimport {Checkbox, IconButton} from '@material-ui/core'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {TaskStatuses, TaskType} from '../../../../api/todolists-api'\r\nimport {EditableSpan} from \"../../../../components/EditableSpan/EditableSpan\";\r\n\r\ntype TaskPropsType = {\r\n    task: TaskType\r\n    todolistId: string\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n}\r\nexport const Task = React.memo((props: TaskPropsType) => {\r\n    const onClickHandler = useCallback(() => props.removeTask(props.task.id, props.todolistId), [props.task.id, props.todolistId]);\r\n\r\n    const onChangeHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        let newIsDoneValue = e.currentTarget.checked\r\n        props.changeTaskStatus(props.task.id, newIsDoneValue ? TaskStatuses.Completed : TaskStatuses.New, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    const onTitleChangeHandler = useCallback((newValue: string) => {\r\n        props.changeTaskTitle(props.task.id, newValue, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    return <div key={props.task.id} className={props.task.status === TaskStatuses.Completed ? 'is-done' : ''}>\r\n        <Checkbox\r\n            checked={props.task.status === TaskStatuses.Completed}\r\n            color=\"primary\"\r\n            onChange={onChangeHandler}\r\n        />\r\n\r\n        <EditableSpan value={props.task.title} onChange={onTitleChangeHandler}/>\r\n        <IconButton onClick={onClickHandler}>\r\n            <Delete/>\r\n        </IconButton>\r\n    </div>\r\n})\r\n","E:\\itInCubator\\to_do_list_06_main\\src\\components\\EditableSpan\\EditableSpan.tsx",[],"E:\\itInCubator\\to_do_list_06_main\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx",[],"E:\\itInCubator\\to_do_list_06_main\\src\\app\\appReducer.ts",[],"E:\\itInCubator\\to_do_list_06_main\\src\\utils\\errorUtils.ts",[],"E:\\itInCubator\\to_do_list_06_main\\src\\features\\Login\\Login.tsx",["93"],"import React from 'react'\r\nimport {Checkbox, FormControl, FormControlLabel, FormGroup, FormLabel, TextField, Button, Grid} from '@material-ui/core'\r\n\r\nexport const Login = () => {\r\n    return <Grid container justify=\"center\">\r\n        <Grid item xs={4}>\r\n            <FormControl>\r\n                <FormLabel>\r\n                    <p>To log in get registered\r\n                        <a href={'https://social-network.samuraijs.com/'}\r\n                           target={'_blank'}>here\r\n                        </a>\r\n                    </p>\r\n                    <p>or use common test account credentials:</p>\r\n                    <p>Email: free@samuraijs.com</p>\r\n                    <p>Password: free</p>\r\n                </FormLabel>\r\n                <FormGroup>\r\n                    <TextField\r\n                        label=\"Email\"\r\n                        margin=\"normal\"\r\n                    />\r\n                    <TextField\r\n                        type=\"password\"\r\n                        label=\"Password\"\r\n                        margin=\"normal\"\r\n                    />\r\n                    <FormControlLabel\r\n                        label={'Remember me'}\r\n                        control={<Checkbox />}\r\n                    />\r\n                    <Button type={'submit'} variant={'contained'} color={'primary'}>Login</Button>\r\n                </FormGroup>\r\n            </FormControl>\r\n        </Grid>\r\n    </Grid>\r\n}\r\n",{"ruleId":"94","severity":1,"message":"95","line":34,"column":8,"nodeType":"96","endLine":34,"endColumn":10,"suggestions":"97"},{"ruleId":"94","severity":1,"message":"98","line":39,"column":8,"nodeType":"96","endLine":39,"endColumn":10,"suggestions":"99"},{"ruleId":"94","severity":1,"message":"98","line":44,"column":8,"nodeType":"96","endLine":44,"endColumn":10,"suggestions":"100"},{"ruleId":"94","severity":1,"message":"98","line":49,"column":8,"nodeType":"96","endLine":49,"endColumn":10,"suggestions":"101"},{"ruleId":"94","severity":1,"message":"98","line":54,"column":8,"nodeType":"96","endLine":54,"endColumn":10,"suggestions":"102"},{"ruleId":"94","severity":1,"message":"98","line":59,"column":8,"nodeType":"96","endLine":59,"endColumn":10,"suggestions":"103"},{"ruleId":"94","severity":1,"message":"98","line":64,"column":8,"nodeType":"96","endLine":64,"endColumn":10,"suggestions":"104"},{"ruleId":"94","severity":1,"message":"98","line":69,"column":8,"nodeType":"96","endLine":69,"endColumn":10,"suggestions":"105"},{"ruleId":"94","severity":1,"message":"95","line":37,"column":8,"nodeType":"96","endLine":37,"endColumn":27,"suggestions":"106"},{"ruleId":"94","severity":1,"message":"107","line":41,"column":8,"nodeType":"96","endLine":41,"endColumn":42,"suggestions":"108"},{"ruleId":"94","severity":1,"message":"107","line":48,"column":8,"nodeType":"96","endLine":48,"endColumn":54,"suggestions":"109"},{"ruleId":"94","severity":1,"message":"107","line":50,"column":95,"nodeType":"96","endLine":50,"endColumn":134,"suggestions":"110"},{"ruleId":"94","severity":1,"message":"107","line":51,"column":101,"nodeType":"96","endLine":51,"endColumn":140,"suggestions":"111"},{"ruleId":"94","severity":1,"message":"107","line":52,"column":107,"nodeType":"96","endLine":52,"endColumn":146,"suggestions":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":2,"column":9,"nodeType":"119","messageId":"120","endLine":2,"endColumn":12},{"ruleId":"117","severity":1,"message":"121","line":2,"column":14,"nodeType":"119","messageId":"120","endLine":2,"endColumn":20},{"ruleId":"117","severity":1,"message":"122","line":2,"column":22,"nodeType":"119","messageId":"120","endLine":2,"endColumn":33},{"ruleId":"94","severity":1,"message":"107","line":15,"column":97,"nodeType":"96","endLine":15,"endColumn":130,"suggestions":"123"},{"ruleId":"94","severity":1,"message":"107","line":20,"column":8,"nodeType":"96","endLine":20,"endColumn":41,"suggestions":"124"},{"ruleId":"94","severity":1,"message":"107","line":24,"column":8,"nodeType":"96","endLine":24,"endColumn":41,"suggestions":"125"},{"ruleId":"126","severity":1,"message":"127","line":10,"column":25,"nodeType":"128","endLine":11,"endColumn":46},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'demo' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["129"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["130"],["131"],["132"],["133"],["134"],["135"],["136"],["137"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["138"],["139"],["140"],["141"],["142"],"no-native-reassign",["143"],"no-negated-in-lhs",["144"],"@typescript-eslint/no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'FormControl' is defined but never used.",["145"],["146"],["147"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement",{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"150","fix":"152"},{"desc":"150","fix":"153"},{"desc":"150","fix":"154"},{"desc":"150","fix":"155"},{"desc":"150","fix":"156"},{"desc":"150","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"160","fix":"162"},{"desc":"160","fix":"163"},{"desc":"160","fix":"164"},{"desc":"160","fix":"165"},"no-global-assign","no-unsafe-negation",{"desc":"160","fix":"166"},{"desc":"160","fix":"167"},{"desc":"160","fix":"168"},"Update the dependencies array to be: [demo, dispatch]",{"range":"169","text":"170"},"Update the dependencies array to be: [dispatch]",{"range":"171","text":"172"},{"range":"173","text":"172"},{"range":"174","text":"172"},{"range":"175","text":"172"},{"range":"176","text":"172"},{"range":"177","text":"172"},{"range":"178","text":"172"},"Update the dependencies array to be: [demo, dispatch, props.todolist.id]",{"range":"179","text":"180"},"Update the dependencies array to be: [props]",{"range":"181","text":"182"},{"range":"183","text":"182"},{"range":"184","text":"182"},{"range":"185","text":"182"},{"range":"186","text":"182"},{"range":"187","text":"182"},{"range":"188","text":"182"},{"range":"189","text":"182"},[1170,1172],"[demo, dispatch]",[1341,1343],"[dispatch]",[1512,1514],[1717,1719],[1930,1932],[2131,2133],[2278,2280],[2457,2459],[1467,1486],"[demo, dispatch, props.todolist.id]",[1601,1635],"[props]",[1866,1912],[2011,2050],[2153,2192],[2301,2340],[766,799],[1072,1105],[1262,1295]]