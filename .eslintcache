[{"E:\\itInCubator\\to_do_list_06_main\\src\\index.tsx":"1","E:\\itInCubator\\to_do_list_06_main\\src\\reportWebVitals.ts":"2","E:\\itInCubator\\to_do_list_06_main\\src\\app\\store.ts":"3","E:\\itInCubator\\to_do_list_06_main\\src\\app\\App.tsx":"4","E:\\itInCubator\\to_do_list_06_main\\src\\features\\TodolistsList\\tasks-reducer.ts":"5","E:\\itInCubator\\to_do_list_06_main\\src\\features\\TodolistsList\\todolists-reducer.ts":"6","E:\\itInCubator\\to_do_list_06_main\\src\\features\\TodolistsList\\TodolistsList.tsx":"7","E:\\itInCubator\\to_do_list_06_main\\src\\api\\todolists-api.ts":"8","E:\\itInCubator\\to_do_list_06_main\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx":"9","E:\\itInCubator\\to_do_list_06_main\\src\\components\\AddItemForm\\AddItemForm.tsx":"10","E:\\itInCubator\\to_do_list_06_main\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx":"11","E:\\itInCubator\\to_do_list_06_main\\src\\components\\EditableSpan\\EditableSpan.tsx":"12","E:\\itInCubator\\to_do_list_06_main\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx":"13","E:\\itInCubator\\to_do_list_06_main\\src\\app\\appReducer.ts":"14","E:\\itInCubator\\to_do_list_06_main\\src\\utils\\errorUtils.ts":"15","E:\\itInCubator\\to_do_list_06_main\\src\\features\\Login\\Login.tsx":"16","E:\\itInCubator\\to_do_list_06_main\\src\\features\\Login\\auth-reducer.ts":"17"},{"size":643,"mtime":1614104838953,"results":"18","hashOfConfig":"19"},{"size":425,"mtime":1607869388000,"results":"20","hashOfConfig":"19"},{"size":1182,"mtime":1615670539875,"results":"21","hashOfConfig":"19"},{"size":2544,"mtime":1615673236655,"results":"22","hashOfConfig":"19"},{"size":5983,"mtime":1614272221406,"results":"23","hashOfConfig":"19"},{"size":5216,"mtime":1614272497164,"results":"24","hashOfConfig":"19"},{"size":4025,"mtime":1615672797441,"results":"25","hashOfConfig":"19"},{"size":3086,"mtime":1615673074669,"results":"26","hashOfConfig":"19"},{"size":4213,"mtime":1614255717941,"results":"27","hashOfConfig":"19"},{"size":1595,"mtime":1614255655311,"results":"28","hashOfConfig":"19"},{"size":1774,"mtime":1614103979140,"results":"29","hashOfConfig":"19"},{"size":952,"mtime":1594154724000,"results":"30","hashOfConfig":"19"},{"size":1039,"mtime":1614257130455,"results":"31","hashOfConfig":"19"},{"size":1959,"mtime":1615672372247,"results":"32","hashOfConfig":"19"},{"size":786,"mtime":1614270959667,"results":"33","hashOfConfig":"19"},{"size":3014,"mtime":1615670983048,"results":"34","hashOfConfig":"19"},{"size":2263,"mtime":1615673199340,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"l3p77m",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\itInCubator\\to_do_list_06_main\\src\\index.tsx",[],["74","75"],"E:\\itInCubator\\to_do_list_06_main\\src\\reportWebVitals.ts",[],"E:\\itInCubator\\to_do_list_06_main\\src\\app\\store.ts",[],"E:\\itInCubator\\to_do_list_06_main\\src\\app\\App.tsx",["76","77"],"E:\\itInCubator\\to_do_list_06_main\\src\\features\\TodolistsList\\tasks-reducer.ts",[],"E:\\itInCubator\\to_do_list_06_main\\src\\features\\TodolistsList\\todolists-reducer.ts",[],"E:\\itInCubator\\to_do_list_06_main\\src\\features\\TodolistsList\\TodolistsList.tsx",["78","79","80","81","82","83","84","85"],"E:\\itInCubator\\to_do_list_06_main\\src\\api\\todolists-api.ts",[],"E:\\itInCubator\\to_do_list_06_main\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx",["86","87","88","89","90","91"],"import React, {useCallback, useEffect} from 'react'\r\nimport {AddItemForm} from '../../../components/AddItemForm/AddItemForm'\r\nimport {EditableSpan} from '../../../components/EditableSpan/EditableSpan'\r\nimport {Button, IconButton} from '@material-ui/core'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {Task} from './Task/Task'\r\nimport {TaskStatuses, TaskType} from '../../../api/todolists-api'\r\nimport {FilterValuesType, TodolistDomainType} from '../todolists-reducer'\r\nimport {useDispatch} from 'react-redux'\r\nimport {fetchTasksTC} from '../tasks-reducer'\r\n\r\ntype PropsType = {\r\n    todolist: TodolistDomainType\r\n    tasks: Array<TaskType>\r\n    changeFilter: (value: FilterValuesType, todolistId: string) => void\r\n    addTask: (title: string, todolistId: string) => void\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n    removeTodolist: (id: string) => void\r\n    changeTodolistTitle: (id: string, newTitle: string) => void\r\n    demo?: boolean\r\n\r\n}\r\n\r\nexport const Todolist = React.memo(function ({demo = false, ...props}: PropsType) {\r\n    console.log('Todolist called')\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        if(demo) {\r\n            return\r\n        }\r\n        const thunk = fetchTasksTC(props.todolist.id)\r\n        dispatch(thunk)\r\n\r\n    }, [props.todolist.id])\r\n\r\n    const addTask = useCallback((title: string) => {\r\n        props.addTask(title, props.todolist.id)\r\n    }, [props.addTask, props.todolist.id])\r\n\r\n    const removeTodolist = () => {\r\n        props.removeTodolist(props.todolist.id)\r\n    }\r\n    const changeTodolistTitle = useCallback((title: string) => {\r\n        props.changeTodolistTitle(props.todolist.id, title)\r\n    }, [props.todolist.id, props.changeTodolistTitle])\r\n\r\n    const onAllClickHandler = useCallback(() => props.changeFilter('all', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n    const onActiveClickHandler = useCallback(() => props.changeFilter('active', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n    const onCompletedClickHandler = useCallback(() => props.changeFilter('completed', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n\r\n\r\n    let tasksForTodolist = props.tasks\r\n\r\n    if (props.todolist.filter === 'active') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.New)\r\n    }\r\n    if (props.todolist.filter === 'completed') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.Completed)\r\n    }\r\n\r\n    return <div>\r\n        <h3><EditableSpan value={props.todolist.title} onChange={changeTodolistTitle}/>\r\n            <IconButton onClick={removeTodolist} disabled={props.todolist.entityStatus === \"loading\"}>\r\n                <Delete/>\r\n            </IconButton>\r\n        </h3>\r\n        <AddItemForm addItem={addTask} disabled={props.todolist.entityStatus === \"loading\"}/>\r\n        <div>\r\n            {\r\n                tasksForTodolist.map(t => <Task key={t.id} task={t} todolistId={props.todolist.id}\r\n                                                removeTask={props.removeTask}\r\n                                                changeTaskTitle={props.changeTaskTitle}\r\n                                                changeTaskStatus={props.changeTaskStatus}\r\n                />)\r\n            }\r\n        </div>\r\n        <div style={{paddingTop: '10px'}}>\r\n            <Button variant={props.todolist.filter === 'all' ? 'outlined' : 'text'}\r\n                    onClick={onAllClickHandler}\r\n                    color={'default'}\r\n            >All\r\n            </Button>\r\n            <Button variant={props.todolist.filter === 'active' ? 'outlined' : 'text'}\r\n                    onClick={onActiveClickHandler}\r\n                    color={'primary'}>Active\r\n            </Button>\r\n            <Button variant={props.todolist.filter === 'completed' ? 'outlined' : 'text'}\r\n                    onClick={onCompletedClickHandler}\r\n                    color={'secondary'}>Completed\r\n            </Button>\r\n        </div>\r\n    </div>\r\n})\r\n\r\n\r\n","E:\\itInCubator\\to_do_list_06_main\\src\\components\\AddItemForm\\AddItemForm.tsx",["92","93","94"],"import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\nimport {Box, Button, FormControl, IconButton, TextField} from '@material-ui/core';\r\nimport {AddBox} from '@material-ui/icons';\r\n\r\ntype AddItemFormPropsType = {\r\n    addItem: (title: string) => void\r\n    disabled?: boolean\r\n}\r\n\r\nexport const AddItemForm = React.memo(function({addItem, disabled = false}: AddItemFormPropsType) {\r\n    console.log(\"AddItemForm called\")\r\n\r\n    let [title, setTitle] = useState(\"\")\r\n    let [error, setError] = useState<string | null>(null)\r\n\r\n    const addItemHandler = () => {\r\n        if (title.trim() !== \"\") {\r\n            addItem(title);\r\n            setTitle(\"\");\r\n        } else {\r\n            setError(\"Title is required\");\r\n        }\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (error !== null) {\r\n            setError(null);\r\n        }\r\n        if (e.charCode === 13) {\r\n            addItemHandler();\r\n        }\r\n    }\r\n\r\n    return <div>\r\n        <TextField variant=\"outlined\"\r\n                   disabled={disabled}\r\n                   error={!!error}\r\n                   value={title}\r\n                   onChange={onChangeHandler}\r\n                   onKeyPress={onKeyPressHandler}\r\n                   label=\"Title\"\r\n                   helperText={error}\r\n        />\r\n        <IconButton color=\"primary\" onClick={addItemHandler} disabled={disabled}>\r\n            <AddBox />\r\n        </IconButton>\r\n    </div>\r\n})\r\n","E:\\itInCubator\\to_do_list_06_main\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx",["95","96","97"],"import React, {ChangeEvent, useCallback} from 'react'\r\nimport {Checkbox, IconButton} from '@material-ui/core'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {TaskStatuses, TaskType} from '../../../../api/todolists-api'\r\nimport {EditableSpan} from \"../../../../components/EditableSpan/EditableSpan\";\r\n\r\ntype TaskPropsType = {\r\n    task: TaskType\r\n    todolistId: string\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n}\r\nexport const Task = React.memo((props: TaskPropsType) => {\r\n    const onClickHandler = useCallback(() => props.removeTask(props.task.id, props.todolistId), [props.task.id, props.todolistId]);\r\n\r\n    const onChangeHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        let newIsDoneValue = e.currentTarget.checked\r\n        props.changeTaskStatus(props.task.id, newIsDoneValue ? TaskStatuses.Completed : TaskStatuses.New, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    const onTitleChangeHandler = useCallback((newValue: string) => {\r\n        props.changeTaskTitle(props.task.id, newValue, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    return <div key={props.task.id} className={props.task.status === TaskStatuses.Completed ? 'is-done' : ''}>\r\n        <Checkbox\r\n            checked={props.task.status === TaskStatuses.Completed}\r\n            color=\"primary\"\r\n            onChange={onChangeHandler}\r\n        />\r\n\r\n        <EditableSpan value={props.task.title} onChange={onTitleChangeHandler}/>\r\n        <IconButton onClick={onClickHandler}>\r\n            <Delete/>\r\n        </IconButton>\r\n    </div>\r\n})\r\n","E:\\itInCubator\\to_do_list_06_main\\src\\components\\EditableSpan\\EditableSpan.tsx",[],"E:\\itInCubator\\to_do_list_06_main\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx",[],"E:\\itInCubator\\to_do_list_06_main\\src\\app\\appReducer.ts",[],"E:\\itInCubator\\to_do_list_06_main\\src\\utils\\errorUtils.ts",[],"E:\\itInCubator\\to_do_list_06_main\\src\\features\\Login\\Login.tsx",["98"],"E:\\itInCubator\\to_do_list_06_main\\src\\features\\Login\\auth-reducer.ts",["99","100"],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":35,"column":8,"nodeType":"107","endLine":35,"endColumn":10,"suggestions":"108"},{"ruleId":"105","severity":1,"message":"109","line":38,"column":8,"nodeType":"107","endLine":38,"endColumn":10,"suggestions":"110"},{"ruleId":"105","severity":1,"message":"111","line":35,"column":8,"nodeType":"107","endLine":35,"endColumn":10,"suggestions":"112"},{"ruleId":"105","severity":1,"message":"109","line":40,"column":8,"nodeType":"107","endLine":40,"endColumn":10,"suggestions":"113"},{"ruleId":"105","severity":1,"message":"109","line":45,"column":8,"nodeType":"107","endLine":45,"endColumn":10,"suggestions":"114"},{"ruleId":"105","severity":1,"message":"109","line":50,"column":8,"nodeType":"107","endLine":50,"endColumn":10,"suggestions":"115"},{"ruleId":"105","severity":1,"message":"109","line":55,"column":8,"nodeType":"107","endLine":55,"endColumn":10,"suggestions":"116"},{"ruleId":"105","severity":1,"message":"109","line":60,"column":8,"nodeType":"107","endLine":60,"endColumn":10,"suggestions":"117"},{"ruleId":"105","severity":1,"message":"109","line":65,"column":8,"nodeType":"107","endLine":65,"endColumn":10,"suggestions":"118"},{"ruleId":"105","severity":1,"message":"109","line":70,"column":8,"nodeType":"107","endLine":70,"endColumn":10,"suggestions":"119"},{"ruleId":"105","severity":1,"message":"120","line":37,"column":8,"nodeType":"107","endLine":37,"endColumn":27,"suggestions":"121"},{"ruleId":"105","severity":1,"message":"122","line":41,"column":8,"nodeType":"107","endLine":41,"endColumn":42,"suggestions":"123"},{"ruleId":"105","severity":1,"message":"122","line":48,"column":8,"nodeType":"107","endLine":48,"endColumn":54,"suggestions":"124"},{"ruleId":"105","severity":1,"message":"122","line":50,"column":95,"nodeType":"107","endLine":50,"endColumn":134,"suggestions":"125"},{"ruleId":"105","severity":1,"message":"122","line":51,"column":101,"nodeType":"107","endLine":51,"endColumn":140,"suggestions":"126"},{"ruleId":"105","severity":1,"message":"122","line":52,"column":107,"nodeType":"107","endLine":52,"endColumn":146,"suggestions":"127"},{"ruleId":"128","severity":1,"message":"129","line":2,"column":9,"nodeType":"130","messageId":"131","endLine":2,"endColumn":12},{"ruleId":"128","severity":1,"message":"132","line":2,"column":14,"nodeType":"130","messageId":"131","endLine":2,"endColumn":20},{"ruleId":"128","severity":1,"message":"133","line":2,"column":22,"nodeType":"130","messageId":"131","endLine":2,"endColumn":33},{"ruleId":"105","severity":1,"message":"122","line":15,"column":97,"nodeType":"107","endLine":15,"endColumn":130,"suggestions":"134"},{"ruleId":"105","severity":1,"message":"122","line":20,"column":8,"nodeType":"107","endLine":20,"endColumn":41,"suggestions":"135"},{"ruleId":"105","severity":1,"message":"122","line":24,"column":8,"nodeType":"107","endLine":24,"endColumn":41,"suggestions":"136"},{"ruleId":"137","severity":1,"message":"138","line":45,"column":29,"nodeType":"139","endLine":46,"endColumn":50},{"ruleId":"128","severity":1,"message":"140","line":5,"column":9,"nodeType":"130","messageId":"131","endLine":5,"endColumn":21},{"ruleId":"128","severity":1,"message":"141","line":67,"column":6,"nodeType":"130","messageId":"131","endLine":67,"endColumn":19},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["144"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["145"],"React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'isLoggedIn'. Either include them or remove the dependency array.",["146"],["147"],["148"],["149"],["150"],["151"],["152"],["153"],"React Hook useEffect has missing dependencies: 'demo' and 'dispatch'. Either include them or remove the dependency array.",["154"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["155"],["156"],["157"],["158"],["159"],"@typescript-eslint/no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'FormControl' is defined but never used.",["160"],["161"],["162"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'updateTaskAC' is defined but never used.","'ThunkDispatch' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"163","fix":"164"},{"desc":"163","fix":"165"},{"desc":"166","fix":"167"},{"desc":"163","fix":"168"},{"desc":"163","fix":"169"},{"desc":"163","fix":"170"},{"desc":"163","fix":"171"},{"desc":"163","fix":"172"},{"desc":"163","fix":"173"},{"desc":"163","fix":"174"},{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"177","fix":"179"},{"desc":"177","fix":"180"},{"desc":"177","fix":"181"},{"desc":"177","fix":"182"},{"desc":"177","fix":"183"},{"desc":"177","fix":"184"},{"desc":"177","fix":"185"},"Update the dependencies array to be: [dispatch]",{"range":"186","text":"187"},{"range":"188","text":"187"},"Update the dependencies array to be: [demo, dispatch, isLoggedIn]",{"range":"189","text":"190"},{"range":"191","text":"187"},{"range":"192","text":"187"},{"range":"193","text":"187"},{"range":"194","text":"187"},{"range":"195","text":"187"},{"range":"196","text":"187"},{"range":"197","text":"187"},"Update the dependencies array to be: [demo, dispatch, props.todolist.id]",{"range":"198","text":"199"},"Update the dependencies array to be: [props]",{"range":"200","text":"201"},{"range":"202","text":"201"},{"range":"203","text":"201"},{"range":"204","text":"201"},{"range":"205","text":"201"},{"range":"206","text":"201"},{"range":"207","text":"201"},{"range":"208","text":"201"},[1243,1245],"[dispatch]",[1332,1334],[1323,1325],"[demo, dispatch, isLoggedIn]",[1494,1496],[1665,1667],[1870,1872],[2083,2085],[2284,2286],[2431,2433],[2610,2612],[1467,1486],"[demo, dispatch, props.todolist.id]",[1601,1635],"[props]",[1866,1912],[2011,2050],[2153,2192],[2301,2340],[766,799],[1072,1105],[1262,1295]]